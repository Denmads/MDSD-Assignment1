/*
 * generated by Xtext 2.26.0
 */
grammar InternalX21;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package dk.sdu.mmmi.mdsd.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package dk.sdu.mmmi.mdsd.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import dk.sdu.mmmi.mdsd.services.X21GrammarAccess;

}
@parser::members {
	private X21GrammarAccess grammarAccess;

	public void setGrammarAccess(X21GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleX21
entryRuleX21
:
{ before(grammarAccess.getX21Rule()); }
	 ruleX21
{ after(grammarAccess.getX21Rule()); } 
	 EOF 
;

// Rule X21
ruleX21 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getX21Access().getGroup()); }
		(rule__X21__Group__0)
		{ after(grammarAccess.getX21Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaration
entryRuleDeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
		(rule__Declaration__Alternatives)
		{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule NameAndType
ruleNameAndType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameAndTypeAccess().getGroup()); }
		(rule__NameAndType__Group__0)
		{ after(grammarAccess.getNameAndTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLambda
entryRuleLambda
:
{ before(grammarAccess.getLambdaRule()); }
	 ruleLambda
{ after(grammarAccess.getLambdaRule()); } 
	 EOF 
;

// Rule Lambda
ruleLambda 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLambdaAccess().getGroup()); }
		(rule__Lambda__Group__0)
		{ after(grammarAccess.getLambdaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInput
entryRuleInput
:
{ before(grammarAccess.getInputRule()); }
	 ruleInput
{ after(grammarAccess.getInputRule()); } 
	 EOF 
;

// Rule Input
ruleInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputAccess().getGroup()); }
		(rule__Input__Group__0)
		{ after(grammarAccess.getInputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionOrLambda
entryRuleFunctionOrLambda
:
{ before(grammarAccess.getFunctionOrLambdaRule()); }
	 ruleFunctionOrLambda
{ after(grammarAccess.getFunctionOrLambdaRule()); } 
	 EOF 
;

// Rule FunctionOrLambda
ruleFunctionOrLambda 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionOrLambdaAccess().getGroup()); }
		(rule__FunctionOrLambda__Group__0)
		{ after(grammarAccess.getFunctionOrLambdaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNode
entryRuleNode
:
{ before(grammarAccess.getNodeRule()); }
	 ruleNode
{ after(grammarAccess.getNodeRule()); } 
	 EOF 
;

// Rule Node
ruleNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeAccess().getGroup()); }
		(rule__Node__Group__0)
		{ after(grammarAccess.getNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStream
entryRuleStream
:
{ before(grammarAccess.getStreamRule()); }
	 ruleStream
{ after(grammarAccess.getStreamRule()); } 
	 EOF 
;

// Rule Stream
ruleStream 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStreamAccess().getGroup()); }
		(rule__Stream__Group__0)
		{ after(grammarAccess.getStreamAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementList
entryRuleElementList
:
{ before(grammarAccess.getElementListRule()); }
	 ruleElementList
{ after(grammarAccess.getElementListRule()); } 
	 EOF 
;

// Rule ElementList
ruleElementList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementListAccess().getGroup()); }
		(rule__ElementList__Group__0)
		{ after(grammarAccess.getElementListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataDecl
entryRuleDataDecl
:
{ before(grammarAccess.getDataDeclRule()); }
	 ruleDataDecl
{ after(grammarAccess.getDataDeclRule()); } 
	 EOF 
;

// Rule DataDecl
ruleDataDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataDeclAccess().getGroup()); }
		(rule__DataDecl__Group__0)
		{ after(grammarAccess.getDataDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataVariable
entryRuleDataVariable
:
{ before(grammarAccess.getDataVariableRule()); }
	 ruleDataVariable
{ after(grammarAccess.getDataVariableRule()); } 
	 EOF 
;

// Rule DataVariable
ruleDataVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataVariableAccess().getGroup()); }
		(rule__DataVariable__Group__0)
		{ after(grammarAccess.getDataVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicExp
entryRuleLogicExp
:
{ before(grammarAccess.getLogicExpRule()); }
	 ruleLogicExp
{ after(grammarAccess.getLogicExpRule()); } 
	 EOF 
;

// Rule LogicExp
ruleLogicExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicExpAccess().getGroup()); }
		(rule__LogicExp__Group__0)
		{ after(grammarAccess.getLogicExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExp
entryRuleExp
:
{ before(grammarAccess.getExpRule()); }
	 ruleExp
{ after(grammarAccess.getExpRule()); } 
	 EOF 
;

// Rule Exp
ruleExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpAccess().getGroup()); }
		(rule__Exp__Group__0)
		{ after(grammarAccess.getExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMulDiv
entryRuleMulDiv
:
{ before(grammarAccess.getMulDivRule()); }
	 ruleMulDiv
{ after(grammarAccess.getMulDivRule()); } 
	 EOF 
;

// Rule MulDiv
ruleMulDiv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMulDivAccess().getGroup()); }
		(rule__MulDiv__Group__0)
		{ after(grammarAccess.getMulDivAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLetStatement
entryRuleLetStatement
:
{ before(grammarAccess.getLetStatementRule()); }
	 ruleLetStatement
{ after(grammarAccess.getLetStatementRule()); } 
	 EOF 
;

// Rule LetStatement
ruleLetStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLetStatementAccess().getGroup()); }
		(rule__LetStatement__Group__0)
		{ after(grammarAccess.getLetStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataAccess
entryRuleDataAccess
:
{ before(grammarAccess.getDataAccessRule()); }
	 ruleDataAccess
{ after(grammarAccess.getDataAccessRule()); } 
	 EOF 
;

// Rule DataAccess
ruleDataAccess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataAccessAccess().getGroup()); }
		(rule__DataAccess__Group__0)
		{ after(grammarAccess.getDataAccessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNone
entryRuleNone
:
{ before(grammarAccess.getNoneRule()); }
	 ruleNone
{ after(grammarAccess.getNoneRule()); } 
	 EOF 
;

// Rule None
ruleNone 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNoneAccess().getGroup()); }
		(rule__None__Group__0)
		{ after(grammarAccess.getNoneAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStatement
entryRuleIfStatement
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStatementAccess().getGroup()); }
		(rule__IfStatement__Group__0)
		{ after(grammarAccess.getIfStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNewStatement
entryRuleNewStatement
:
{ before(grammarAccess.getNewStatementRule()); }
	 ruleNewStatement
{ after(grammarAccess.getNewStatementRule()); } 
	 EOF 
;

// Rule NewStatement
ruleNewStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNewStatementAccess().getGroup()); }
		(rule__NewStatement__Group__0)
		{ after(grammarAccess.getNewStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarAssignment
entryRuleVarAssignment
:
{ before(grammarAccess.getVarAssignmentRule()); }
	 ruleVarAssignment
{ after(grammarAccess.getVarAssignmentRule()); } 
	 EOF 
;

// Rule VarAssignment
ruleVarAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarAssignmentAccess().getGroup()); }
		(rule__VarAssignment__Group__0)
		{ after(grammarAccess.getVarAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getFunctionParserRuleCall_0()); }
		ruleFunction
		{ after(grammarAccess.getDeclarationAccess().getFunctionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getInputParserRuleCall_1()); }
		ruleInput
		{ after(grammarAccess.getDeclarationAccess().getInputParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getNodeParserRuleCall_2()); }
		ruleNode
		{ after(grammarAccess.getDeclarationAccess().getNodeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getStreamParserRuleCall_3()); }
		ruleStream
		{ after(grammarAccess.getDeclarationAccess().getStreamParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getDataDeclParserRuleCall_4()); }
		ruleDataDecl
		{ after(grammarAccess.getDeclarationAccess().getDataDeclParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getParameterParserRuleCall_5()); }
		ruleParameter
		{ after(grammarAccess.getDeclarationAccess().getParameterParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOrLambda__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionOrLambdaAccess().getGroup_1_0()); }
		(rule__FunctionOrLambda__Group_1_0__0)
		{ after(grammarAccess.getFunctionOrLambdaAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionOrLambdaAccess().getLambdaParserRuleCall_1_1()); }
		ruleLambda
		{ after(grammarAccess.getFunctionOrLambdaAccess().getLambdaParserRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getGroup_0()); }
		(rule__Element__Group_0__0)
		{ after(grammarAccess.getElementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getGroup_1()); }
		(rule__Element__Group_1__0)
		{ after(grammarAccess.getElementAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getGroup_2()); }
		(rule__Element__Group_2__0)
		{ after(grammarAccess.getElementAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getGroup_0()); }
		(rule__Type__Group_0__0)
		{ after(grammarAccess.getTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getGroup_1()); }
		(rule__Type__Group_1__0)
		{ after(grammarAccess.getTypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getGroup_2()); }
		(rule__Type__Group_2__0)
		{ after(grammarAccess.getTypeAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicExpAccess().getGroup_1_0()); }
		(rule__LogicExp__Group_1_0__0)
		{ after(grammarAccess.getLogicExpAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicExpAccess().getGroup_1_1()); }
		(rule__LogicExp__Group_1_1__0)
		{ after(grammarAccess.getLogicExpAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getLogicExpAccess().getGroup_1_2()); }
		(rule__LogicExp__Group_1_2__0)
		{ after(grammarAccess.getLogicExpAccess().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getLogicExpAccess().getGroup_1_3()); }
		(rule__LogicExp__Group_1_3__0)
		{ after(grammarAccess.getLogicExpAccess().getGroup_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getLogicExpAccess().getGroup_1_4()); }
		(rule__LogicExp__Group_1_4__0)
		{ after(grammarAccess.getLogicExpAccess().getGroup_1_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpAccess().getGroup_1_0_0()); }
		(rule__Exp__Group_1_0_0__0)
		{ after(grammarAccess.getExpAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpAccess().getMinusLeftAction_1_0_1()); }
		()
		{ after(grammarAccess.getExpAccess().getMinusLeftAction_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulDivAccess().getGroup_1_0_0()); }
		(rule__MulDiv__Group_1_0_0__0)
		{ after(grammarAccess.getMulDivAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMulDivAccess().getGroup_1_0_1()); }
		(rule__MulDiv__Group_1_0_1__0)
		{ after(grammarAccess.getMulDivAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getLetStatementParserRuleCall_2()); }
		ruleLetStatement
		{ after(grammarAccess.getPrimaryAccess().getLetStatementParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getDataAccessParserRuleCall_3()); }
		ruleDataAccess
		{ after(grammarAccess.getPrimaryAccess().getDataAccessParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getNoneParserRuleCall_4()); }
		ruleNone
		{ after(grammarAccess.getPrimaryAccess().getNoneParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getIfStatementParserRuleCall_5()); }
		ruleIfStatement
		{ after(grammarAccess.getPrimaryAccess().getIfStatementParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getNewStatementParserRuleCall_6()); }
		ruleNewStatement
		{ after(grammarAccess.getPrimaryAccess().getNewStatementParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__X21__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__X21__Group__0__Impl
	rule__X21__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__X21__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getX21Access().getX21Action_0()); }
	()
	{ after(grammarAccess.getX21Access().getX21Action_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__X21__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__X21__Group__1__Impl
	rule__X21__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__X21__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getX21Access().getProgramKeyword_1()); }
	'program'
	{ after(grammarAccess.getX21Access().getProgramKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__X21__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__X21__Group__2__Impl
	rule__X21__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__X21__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getX21Access().getIDTerminalRuleCall_2()); }
	RULE_ID
	{ after(grammarAccess.getX21Access().getIDTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__X21__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__X21__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__X21__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getX21Access().getDeclarationsAssignment_3()); }
	(rule__X21__DeclarationsAssignment_3)*
	{ after(grammarAccess.getX21Access().getDeclarationsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NameAndType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NameAndType__Group__0__Impl
	rule__NameAndType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameAndType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAndTypeAccess().getNameAssignment_0()); }
	(rule__NameAndType__NameAssignment_0)
	{ after(grammarAccess.getNameAndTypeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameAndType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NameAndType__Group__1__Impl
	rule__NameAndType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NameAndType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAndTypeAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getNameAndTypeAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameAndType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NameAndType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameAndType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAndTypeAccess().getTypeAssignment_2()); }
	(rule__NameAndType__TypeAssignment_2)
	{ after(grammarAccess.getNameAndTypeAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getParameterKeyword_0()); }
	'parameter'
	{ after(grammarAccess.getParameterAccess().getParameterKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAndTypeParserRuleCall_1()); }
	ruleNameAndType
	{ after(grammarAccess.getParameterAccess().getNameAndTypeParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
	'function'
	{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
	(rule__Function__NameAssignment_1)
	{ after(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getBodyAssignment_2()); }
	(rule__Function__BodyAssignment_2)
	{ after(grammarAccess.getFunctionAccess().getBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Lambda__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lambda__Group__0__Impl
	rule__Lambda__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLambdaAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getLambdaAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lambda__Group__1__Impl
	rule__Lambda__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLambdaAccess().getNameAndTypeParserRuleCall_1()); }
	ruleNameAndType
	{ after(grammarAccess.getLambdaAccess().getNameAndTypeParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lambda__Group__2__Impl
	rule__Lambda__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLambdaAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getLambdaAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lambda__Group__3__Impl
	rule__Lambda__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLambdaAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getLambdaAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lambda__Group__4__Impl
	rule__Lambda__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLambdaAccess().getLogicAssignment_4()); }
	(rule__Lambda__LogicAssignment_4)
	{ after(grammarAccess.getLambdaAccess().getLogicAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lambda__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLambdaAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getLambdaAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__0__Impl
	rule__Input__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getInputKeyword_0()); }
	'input'
	{ after(grammarAccess.getInputAccess().getInputKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getNameAndTypeParserRuleCall_1()); }
	ruleNameAndType
	{ after(grammarAccess.getInputAccess().getNameAndTypeParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionOrLambda__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionOrLambda__Group__0__Impl
	rule__FunctionOrLambda__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOrLambda__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionOrLambdaAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getFunctionOrLambdaAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOrLambda__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionOrLambda__Group__1__Impl
	rule__FunctionOrLambda__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOrLambda__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionOrLambdaAccess().getAlternatives_1()); }
	(rule__FunctionOrLambda__Alternatives_1)
	{ after(grammarAccess.getFunctionOrLambdaAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOrLambda__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionOrLambda__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOrLambda__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionOrLambdaAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getFunctionOrLambdaAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionOrLambda__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionOrLambda__Group_1_0__0__Impl
	rule__FunctionOrLambda__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOrLambda__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionOrLambdaAccess().getFunctionReferenceAction_1_0_0()); }
	()
	{ after(grammarAccess.getFunctionOrLambdaAccess().getFunctionReferenceAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOrLambda__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionOrLambda__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOrLambda__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionOrLambdaAccess().getRefAssignment_1_0_1()); }
	(rule__FunctionOrLambda__RefAssignment_1_0_1)
	{ after(grammarAccess.getFunctionOrLambdaAccess().getRefAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__0__Impl
	rule__Node__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNodeKeyword_0()); }
	'node'
	{ after(grammarAccess.getNodeAccess().getNodeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__1__Impl
	rule__Node__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNameAssignment_1()); }
	(rule__Node__NameAssignment_1)
	{ after(grammarAccess.getNodeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getBodyAssignment_2()); }
	(rule__Node__BodyAssignment_2)
	{ after(grammarAccess.getNodeAccess().getBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Stream__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stream__Group__0__Impl
	rule__Stream__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stream__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamAccess().getStreamKeyword_0()); }
	'stream'
	{ after(grammarAccess.getStreamAccess().getStreamKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stream__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stream__Group__1__Impl
	rule__Stream__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stream__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamAccess().getStartNodesAssignment_1()); }
	(rule__Stream__StartNodesAssignment_1)
	{ after(grammarAccess.getStreamAccess().getStartNodesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stream__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stream__Group__2__Impl
	rule__Stream__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Stream__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamAccess().getGroup_2()); }
	(rule__Stream__Group_2__0)*
	{ after(grammarAccess.getStreamAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stream__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stream__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stream__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getStreamAccess().getGroup_3()); }
		(rule__Stream__Group_3__0)
		{ after(grammarAccess.getStreamAccess().getGroup_3()); }
	)
	(
		{ before(grammarAccess.getStreamAccess().getGroup_3()); }
		(rule__Stream__Group_3__0)*
		{ after(grammarAccess.getStreamAccess().getGroup_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Stream__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stream__Group_2__0__Impl
	rule__Stream__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stream__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getStreamAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stream__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stream__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stream__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamAccess().getStartNodesAssignment_2_1()); }
	(rule__Stream__StartNodesAssignment_2_1)
	{ after(grammarAccess.getStreamAccess().getStartNodesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Stream__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stream__Group_3__0__Impl
	rule__Stream__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stream__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamAccess().getToKeyword_3_0()); }
	'to'
	{ after(grammarAccess.getStreamAccess().getToKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stream__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stream__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stream__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamAccess().getPointsAssignment_3_1()); }
	(rule__Stream__PointsAssignment_3_1)
	{ after(grammarAccess.getStreamAccess().getPointsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group__0__Impl
	rule__ElementList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getElementsAssignment_0()); }
	(rule__ElementList__ElementsAssignment_0)
	{ after(grammarAccess.getElementListAccess().getElementsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getGroup_1()); }
	(rule__ElementList__Group_1__0)*
	{ after(grammarAccess.getElementListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group_1__0__Impl
	rule__ElementList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getElementListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getElementsAssignment_1_1()); }
	(rule__ElementList__ElementsAssignment_1_1)
	{ after(grammarAccess.getElementListAccess().getElementsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_0__0__Impl
	rule__Element__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getNodeRefAction_0_0()); }
	()
	{ after(grammarAccess.getElementAccess().getNodeRefAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getRefAssignment_0_1()); }
	(rule__Element__RefAssignment_0_1)
	{ after(grammarAccess.getElementAccess().getRefAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_1__0__Impl
	rule__Element__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getAnonymousElementAction_1_0()); }
	()
	{ after(grammarAccess.getElementAccess().getAnonymousElementAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getBodyAssignment_1_1()); }
	(rule__Element__BodyAssignment_1_1)
	{ after(grammarAccess.getElementAccess().getBodyAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__0__Impl
	rule__Element__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getOutputAction_2_0()); }
	()
	{ after(grammarAccess.getElementAccess().getOutputAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__1__Impl
	rule__Element__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getOutputKeyword_2_1()); }
	'output'
	{ after(grammarAccess.getElementAccess().getOutputKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getNameAssignment_2_2()); }
	(rule__Element__NameAssignment_2_2)
	{ after(grammarAccess.getElementAccess().getNameAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataDecl__Group__0__Impl
	rule__DataDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataDeclAccess().getDataKeyword_0()); }
	'data'
	{ after(grammarAccess.getDataDeclAccess().getDataKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataDecl__Group__1__Impl
	rule__DataDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataDeclAccess().getNameAssignment_1()); }
	(rule__DataDecl__NameAssignment_1)
	{ after(grammarAccess.getDataDeclAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataDecl__Group__2__Impl
	rule__DataDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataDeclAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getDataDeclAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataDecl__Group__3__Impl
	rule__DataDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataDeclAccess().getVariablesAssignment_3()); }
	(rule__DataDecl__VariablesAssignment_3)
	{ after(grammarAccess.getDataDeclAccess().getVariablesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDecl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataDecl__Group__4__Impl
	rule__DataDecl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDecl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataDeclAccess().getGroup_4()); }
	(rule__DataDecl__Group_4__0)*
	{ after(grammarAccess.getDataDeclAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDecl__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataDecl__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDecl__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataDeclAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getDataDeclAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataDecl__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataDecl__Group_4__0__Impl
	rule__DataDecl__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDecl__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataDeclAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getDataDeclAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDecl__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataDecl__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDecl__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataDeclAccess().getVariablesAssignment_4_1()); }
	(rule__DataDecl__VariablesAssignment_4_1)
	{ after(grammarAccess.getDataDeclAccess().getVariablesAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataVariable__Group__0__Impl
	rule__DataVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataVariableAccess().getNameAssignment_0()); }
	(rule__DataVariable__NameAssignment_0)
	{ after(grammarAccess.getDataVariableAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataVariable__Group__1__Impl
	rule__DataVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataVariableAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getDataVariableAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataVariable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataVariableAccess().getTypeAssignment_2()); }
	(rule__DataVariable__TypeAssignment_2)
	{ after(grammarAccess.getDataVariableAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0__0__Impl
	rule__Type__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getIntTypeAction_0_0()); }
	()
	{ after(grammarAccess.getTypeAccess().getIntTypeAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getIntKeyword_0_1()); }
	'int'
	{ after(grammarAccess.getTypeAccess().getIntKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_1__0__Impl
	rule__Type__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getStringTypeAction_1_0()); }
	()
	{ after(grammarAccess.getTypeAccess().getStringTypeAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getStringKeyword_1_1()); }
	'string'
	{ after(grammarAccess.getTypeAccess().getStringKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__0__Impl
	rule__Type__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getCustomTypeAction_2_0()); }
	()
	{ after(grammarAccess.getTypeAccess().getCustomTypeAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getDeclarationAssignment_2_1()); }
	(rule__Type__DeclarationAssignment_2_1)
	{ after(grammarAccess.getTypeAccess().getDeclarationAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group__0__Impl
	rule__LogicExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getExpParserRuleCall_0()); }
	ruleExp
	{ after(grammarAccess.getLogicExpAccess().getExpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group__1__Impl
	rule__LogicExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getAlternatives_1()); }
	(rule__LogicExp__Alternatives_1)
	{ after(grammarAccess.getLogicExpAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getRightAssignment_2()); }
	(rule__LogicExp__RightAssignment_2)
	{ after(grammarAccess.getLogicExpAccess().getRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExp__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1_0__0__Impl
	rule__LogicExp__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getEqualsLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getLogicExpAccess().getEqualsLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getEqualsSignKeyword_1_0_1()); }
	'='
	{ after(grammarAccess.getLogicExpAccess().getEqualsSignKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExp__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1_1__0__Impl
	rule__LogicExp__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getLessThanLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getLogicExpAccess().getLessThanLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getLessThanSignKeyword_1_1_1()); }
	'<'
	{ after(grammarAccess.getLogicExpAccess().getLessThanSignKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExp__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1_2__0__Impl
	rule__LogicExp__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getGreaterThanLeftAction_1_2_0()); }
	()
	{ after(grammarAccess.getLogicExpAccess().getGreaterThanLeftAction_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getGreaterThanSignKeyword_1_2_1()); }
	'>'
	{ after(grammarAccess.getLogicExpAccess().getGreaterThanSignKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExp__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1_3__0__Impl
	rule__LogicExp__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getLessThanOrEqualsLeftAction_1_3_0()); }
	()
	{ after(grammarAccess.getLogicExpAccess().getLessThanOrEqualsLeftAction_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getLessThanSignEqualsSignKeyword_1_3_1()); }
	'<='
	{ after(grammarAccess.getLogicExpAccess().getLessThanSignEqualsSignKeyword_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExp__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1_4__0__Impl
	rule__LogicExp__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getGreaterThanOrEqualsLeftAction_1_4_0()); }
	()
	{ after(grammarAccess.getLogicExpAccess().getGreaterThanOrEqualsLeftAction_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getGreaterThanSignEqualsSignKeyword_1_4_1()); }
	'>='
	{ after(grammarAccess.getLogicExpAccess().getGreaterThanSignEqualsSignKeyword_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group__0__Impl
	rule__Exp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getMulDivParserRuleCall_0()); }
	ruleMulDiv
	{ after(grammarAccess.getExpAccess().getMulDivParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getGroup_1()); }
	(rule__Exp__Group_1__0)*
	{ after(grammarAccess.getExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1__0__Impl
	rule__Exp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getAlternatives_1_0()); }
	(rule__Exp__Alternatives_1_0)
	{ after(grammarAccess.getExpAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getRightAssignment_1_1()); }
	(rule__Exp__RightAssignment_1_1)
	{ after(grammarAccess.getExpAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1_0_0__0__Impl
	rule__Exp__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getPlusLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getExpAccess().getPlusLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getPlusSignKeyword_1_0_0_1()); }
	'+'
	{ after(grammarAccess.getExpAccess().getPlusSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulDiv__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulDiv__Group__0__Impl
	rule__MulDiv__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulDivAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getMulDivAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulDiv__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulDivAccess().getGroup_1()); }
	(rule__MulDiv__Group_1__0)*
	{ after(grammarAccess.getMulDivAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulDiv__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulDiv__Group_1__0__Impl
	rule__MulDiv__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulDivAccess().getAlternatives_1_0()); }
	(rule__MulDiv__Alternatives_1_0)
	{ after(grammarAccess.getMulDivAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulDiv__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulDivAccess().getRightAssignment_1_1()); }
	(rule__MulDiv__RightAssignment_1_1)
	{ after(grammarAccess.getMulDivAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulDiv__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulDiv__Group_1_0_0__0__Impl
	rule__MulDiv__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulDivAccess().getMulLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getMulDivAccess().getMulLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulDiv__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulDivAccess().getAsteriskKeyword_1_0_0_1()); }
	'*'
	{ after(grammarAccess.getMulDivAccess().getAsteriskKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulDiv__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulDiv__Group_1_0_1__0__Impl
	rule__MulDiv__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulDivAccess().getDivLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getMulDivAccess().getDivLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulDiv__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulDivAccess().getSolidusKeyword_1_0_1_1()); }
	'/'
	{ after(grammarAccess.getMulDivAccess().getSolidusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getIntAction_0_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getIntAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getValueAssignment_0_1()); }
	(rule__Primary__ValueAssignment_0_1)
	{ after(grammarAccess.getPrimaryAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getParenthesisAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getParenthesisAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
	rule__Primary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__2__Impl
	rule__Primary__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getBodyAssignment_1_2()); }
	(rule__Primary__BodyAssignment_1_2)
	{ after(grammarAccess.getPrimaryAccess().getBodyAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LetStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetStatement__Group__0__Impl
	rule__LetStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetStatementAccess().getLetKeyword_0()); }
	'let'
	{ after(grammarAccess.getLetStatementAccess().getLetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetStatement__Group__1__Impl
	rule__LetStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetStatementAccess().getNameAssignment_1()); }
	(rule__LetStatement__NameAssignment_1)
	{ after(grammarAccess.getLetStatementAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetStatement__Group__2__Impl
	rule__LetStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetStatementAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getLetStatementAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetStatement__Group__3__Impl
	rule__LetStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetStatementAccess().getValueAssignment_3()); }
	(rule__LetStatement__ValueAssignment_3)
	{ after(grammarAccess.getLetStatementAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetStatement__Group__4__Impl
	rule__LetStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetStatementAccess().getInKeyword_4()); }
	'in'
	{ after(grammarAccess.getLetStatementAccess().getInKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetStatement__Group__5__Impl
	rule__LetStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetStatementAccess().getBodyAssignment_5()); }
	(rule__LetStatement__BodyAssignment_5)
	{ after(grammarAccess.getLetStatementAccess().getBodyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetStatementAccess().getEndKeyword_6()); }
	'end'
	{ after(grammarAccess.getLetStatementAccess().getEndKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataAccess__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataAccess__Group__0__Impl
	rule__DataAccess__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataAccess__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccessAccess().getRefAssignment_0()); }
	(rule__DataAccess__RefAssignment_0)
	{ after(grammarAccess.getDataAccessAccess().getRefAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataAccess__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataAccess__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataAccess__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccessAccess().getGroup_1()); }
	(rule__DataAccess__Group_1__0)*
	{ after(grammarAccess.getDataAccessAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataAccess__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataAccess__Group_1__0__Impl
	rule__DataAccess__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataAccess__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccessAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getDataAccessAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataAccess__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataAccess__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataAccess__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccessAccess().getVarRefsAssignment_1_1()); }
	(rule__DataAccess__VarRefsAssignment_1_1)
	{ after(grammarAccess.getDataAccessAccess().getVarRefsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__None__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__None__Group__0__Impl
	rule__None__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__None__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoneAccess().getNoneAction_0()); }
	()
	{ after(grammarAccess.getNoneAccess().getNoneAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__None__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__None__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__None__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoneAccess().getNoneKeyword_1()); }
	'none'
	{ after(grammarAccess.getNoneAccess().getNoneKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getConditionAssignment_1()); }
	(rule__IfStatement__ConditionAssignment_1)
	{ after(grammarAccess.getIfStatementAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getIfStatementAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getTrueExpAssignment_3()); }
	(rule__IfStatement__TrueExpAssignment_3)
	{ after(grammarAccess.getIfStatementAccess().getTrueExpAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__4__Impl
	rule__IfStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseKeyword_4()); }
	'else'
	{ after(grammarAccess.getIfStatementAccess().getElseKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__5__Impl
	rule__IfStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getFalseExpAssignment_5()); }
	(rule__IfStatement__FalseExpAssignment_5)
	{ after(grammarAccess.getIfStatementAccess().getFalseExpAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getEndKeyword_6()); }
	'end'
	{ after(grammarAccess.getIfStatementAccess().getEndKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NewStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewStatement__Group__0__Impl
	rule__NewStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewStatementAccess().getNewKeyword_0()); }
	'new'
	{ after(grammarAccess.getNewStatementAccess().getNewKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewStatement__Group__1__Impl
	rule__NewStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewStatementAccess().getTypeAssignment_1()); }
	(rule__NewStatement__TypeAssignment_1)
	{ after(grammarAccess.getNewStatementAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewStatement__Group__2__Impl
	rule__NewStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewStatementAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getNewStatementAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewStatement__Group__3__Impl
	rule__NewStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewStatementAccess().getVariablesAssignment_3()); }
	(rule__NewStatement__VariablesAssignment_3)
	{ after(grammarAccess.getNewStatementAccess().getVariablesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewStatement__Group__4__Impl
	rule__NewStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewStatementAccess().getGroup_4()); }
	(rule__NewStatement__Group_4__0)*
	{ after(grammarAccess.getNewStatementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewStatementAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getNewStatementAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NewStatement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewStatement__Group_4__0__Impl
	rule__NewStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewStatementAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getNewStatementAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewStatement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewStatementAccess().getVariablesAssignment_4_1()); }
	(rule__NewStatement__VariablesAssignment_4_1)
	{ after(grammarAccess.getNewStatementAccess().getVariablesAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarAssignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarAssignment__Group__0__Impl
	rule__VarAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAssignmentAccess().getVariableAssignment_0()); }
	(rule__VarAssignment__VariableAssignment_0)
	{ after(grammarAccess.getVarAssignmentAccess().getVariableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarAssignment__Group__1__Impl
	rule__VarAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAssignmentAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getVarAssignmentAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarAssignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAssignmentAccess().getValueAssignment_2()); }
	(rule__VarAssignment__ValueAssignment_2)
	{ after(grammarAccess.getVarAssignmentAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__X21__DeclarationsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getX21Access().getDeclarationsDeclarationParserRuleCall_3_0()); }
		ruleDeclaration
		{ after(grammarAccess.getX21Access().getDeclarationsDeclarationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameAndType__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAndTypeAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getNameAndTypeAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameAndType__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAndTypeAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getNameAndTypeAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__BodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getBodyLambdaParserRuleCall_2_0()); }
		ruleLambda
		{ after(grammarAccess.getFunctionAccess().getBodyLambdaParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__LogicAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLambdaAccess().getLogicExpParserRuleCall_4_0()); }
		ruleExp
		{ after(grammarAccess.getLambdaAccess().getLogicExpParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionOrLambda__RefAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionOrLambdaAccess().getRefFunctionCrossReference_1_0_1_0()); }
		(
			{ before(grammarAccess.getFunctionOrLambdaAccess().getRefFunctionIDTerminalRuleCall_1_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFunctionOrLambdaAccess().getRefFunctionIDTerminalRuleCall_1_0_1_0_1()); }
		)
		{ after(grammarAccess.getFunctionOrLambdaAccess().getRefFunctionCrossReference_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getNodeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__BodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getBodyFunctionOrLambdaParserRuleCall_2_0()); }
		ruleFunctionOrLambda
		{ after(grammarAccess.getNodeAccess().getBodyFunctionOrLambdaParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stream__StartNodesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamAccess().getStartNodesNodeOrInputCrossReference_1_0()); }
		(
			{ before(grammarAccess.getStreamAccess().getStartNodesNodeOrInputIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStreamAccess().getStartNodesNodeOrInputIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getStreamAccess().getStartNodesNodeOrInputCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stream__StartNodesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamAccess().getStartNodesNodeOrInputCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getStreamAccess().getStartNodesNodeOrInputIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStreamAccess().getStartNodesNodeOrInputIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getStreamAccess().getStartNodesNodeOrInputCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stream__PointsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamAccess().getPointsElementListParserRuleCall_3_1_0()); }
		ruleElementList
		{ after(grammarAccess.getStreamAccess().getPointsElementListParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__ElementsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementListAccess().getElementsElementParserRuleCall_0_0()); }
		ruleElement
		{ after(grammarAccess.getElementListAccess().getElementsElementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__ElementsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementListAccess().getElementsElementParserRuleCall_1_1_0()); }
		ruleElement
		{ after(grammarAccess.getElementListAccess().getElementsElementParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__RefAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getRefNodeCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getElementAccess().getRefNodeIDTerminalRuleCall_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getElementAccess().getRefNodeIDTerminalRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getElementAccess().getRefNodeCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__BodyAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getBodyFunctionOrLambdaParserRuleCall_1_1_0()); }
		ruleFunctionOrLambda
		{ after(grammarAccess.getElementAccess().getBodyFunctionOrLambdaParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__NameAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getNameIDTerminalRuleCall_2_2_0()); }
		RULE_ID
		{ after(grammarAccess.getElementAccess().getNameIDTerminalRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDecl__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataDeclAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDataDeclAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDecl__VariablesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataDeclAccess().getVariablesDataVariableParserRuleCall_3_0()); }
		ruleDataVariable
		{ after(grammarAccess.getDataDeclAccess().getVariablesDataVariableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDecl__VariablesAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataDeclAccess().getVariablesDataVariableParserRuleCall_4_1_0()); }
		ruleDataVariable
		{ after(grammarAccess.getDataDeclAccess().getVariablesDataVariableParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataVariable__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataVariableAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getDataVariableAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataVariable__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataVariableAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getDataVariableAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__DeclarationAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getDeclarationDataDeclCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getTypeAccess().getDeclarationDataDeclIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTypeAccess().getDeclarationDataDeclIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getTypeAccess().getDeclarationDataDeclCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__RightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicExpAccess().getRightExpParserRuleCall_2_0()); }
		ruleExp
		{ after(grammarAccess.getLogicExpAccess().getRightExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpAccess().getRightMulDivParserRuleCall_1_1_0()); }
		ruleMulDiv
		{ after(grammarAccess.getExpAccess().getRightMulDivParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulDivAccess().getRightPrimaryParserRuleCall_1_1_0()); }
		rulePrimary
		{ after(grammarAccess.getMulDivAccess().getRightPrimaryParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getPrimaryAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__BodyAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getBodyExpParserRuleCall_1_2_0()); }
		ruleExp
		{ after(grammarAccess.getPrimaryAccess().getBodyExpParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetStatementAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLetStatementAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetStatementAccess().getValueExpParserRuleCall_3_0()); }
		ruleExp
		{ after(grammarAccess.getLetStatementAccess().getValueExpParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__BodyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetStatementAccess().getBodyExpParserRuleCall_5_0()); }
		ruleExp
		{ after(grammarAccess.getLetStatementAccess().getBodyExpParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataAccess__RefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataAccessAccess().getRefDataRefCrossReference_0_0()); }
		(
			{ before(grammarAccess.getDataAccessAccess().getRefDataRefIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDataAccessAccess().getRefDataRefIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getDataAccessAccess().getRefDataRefCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataAccess__VarRefsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataAccessAccess().getVarRefsDataVariableCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getDataAccessAccess().getVarRefsDataVariableIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDataAccessAccess().getVarRefsDataVariableIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getDataAccessAccess().getVarRefsDataVariableCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getConditionLogicExpParserRuleCall_1_0()); }
		ruleLogicExp
		{ after(grammarAccess.getIfStatementAccess().getConditionLogicExpParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__TrueExpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getTrueExpExpParserRuleCall_3_0()); }
		ruleExp
		{ after(grammarAccess.getIfStatementAccess().getTrueExpExpParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__FalseExpAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getFalseExpExpParserRuleCall_5_0()); }
		ruleExp
		{ after(grammarAccess.getIfStatementAccess().getFalseExpExpParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNewStatementAccess().getTypeDataDeclCrossReference_1_0()); }
		(
			{ before(grammarAccess.getNewStatementAccess().getTypeDataDeclIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNewStatementAccess().getTypeDataDeclIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getNewStatementAccess().getTypeDataDeclCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__VariablesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNewStatementAccess().getVariablesVarAssignmentParserRuleCall_3_0()); }
		ruleVarAssignment
		{ after(grammarAccess.getNewStatementAccess().getVariablesVarAssignmentParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__VariablesAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNewStatementAccess().getVariablesVarAssignmentParserRuleCall_4_1_0()); }
		ruleVarAssignment
		{ after(grammarAccess.getNewStatementAccess().getVariablesVarAssignmentParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssignment__VariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAssignmentAccess().getVariableDataVariableCrossReference_0_0()); }
		(
			{ before(grammarAccess.getVarAssignmentAccess().getVariableDataVariableIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVarAssignmentAccess().getVariableDataVariableIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getVarAssignmentAccess().getVariableDataVariableCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssignment__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAssignmentAccess().getValueExpParserRuleCall_2_0()); }
		ruleExp
		{ after(grammarAccess.getVarAssignmentAccess().getValueExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
