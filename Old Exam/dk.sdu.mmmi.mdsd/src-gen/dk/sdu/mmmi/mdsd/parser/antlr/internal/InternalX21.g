/*
 * generated by Xtext 2.26.0
 */
grammar InternalX21;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package dk.sdu.mmmi.mdsd.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package dk.sdu.mmmi.mdsd.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import dk.sdu.mmmi.mdsd.services.X21GrammarAccess;

}

@parser::members {

 	private X21GrammarAccess grammarAccess;

    public InternalX21Parser(TokenStream input, X21GrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "X21";
   	}

   	@Override
   	protected X21GrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleX21
entryRuleX21 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getX21Rule()); }
	iv_ruleX21=ruleX21
	{ $current=$iv_ruleX21.current; }
	EOF;

// Rule X21
ruleX21 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getX21Access().getX21Action_0(),
					$current);
			}
		)
		otherlv_1='program'
		{
			newLeafNode(otherlv_1, grammarAccess.getX21Access().getProgramKeyword_1());
		}
		this_ID_2=RULE_ID
		{
			newLeafNode(this_ID_2, grammarAccess.getX21Access().getIDTerminalRuleCall_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getX21Access().getDeclarationsDeclarationParserRuleCall_3_0());
				}
				lv_declarations_3_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getX21Rule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_3_0,
						"dk.sdu.mmmi.mdsd.X21.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current; }
	EOF;

// Rule Declaration
ruleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getFunctionParserRuleCall_0());
		}
		this_Function_0=ruleFunction
		{
			$current = $this_Function_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getInputParserRuleCall_1());
		}
		this_Input_1=ruleInput
		{
			$current = $this_Input_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getNodeParserRuleCall_2());
		}
		this_Node_2=ruleNode
		{
			$current = $this_Node_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getStreamParserRuleCall_3());
		}
		this_Stream_3=ruleStream
		{
			$current = $this_Stream_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getDataDeclParserRuleCall_4());
		}
		this_DataDecl_4=ruleDataDecl
		{
			$current = $this_DataDecl_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getParameterParserRuleCall_5());
		}
		this_Parameter_5=ruleParameter
		{
			$current = $this_Parameter_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule NameAndType
ruleNameAndType[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getNameAndTypeAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNameAndTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getNameAndTypeAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNameAndTypeAccess().getTypeTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNameAndTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"dk.sdu.mmmi.mdsd.X21.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='parameter'
		{
			newLeafNode(otherlv_0, grammarAccess.getParameterAccess().getParameterKeyword_0());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getParameterRule());
			}
			newCompositeNode(grammarAccess.getParameterAccess().getNameAndTypeParserRuleCall_1());
		}
		this_NameAndType_1=ruleNameAndType[$current]
		{
			$current = $this_NameAndType_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='function'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionAccess().getFunctionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getBodyLambdaParserRuleCall_2_0());
				}
				lv_body_2_0=ruleLambda
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"body",
						lv_body_2_0,
						"dk.sdu.mmmi.mdsd.X21.Lambda");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLambda
entryRuleLambda returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLambdaRule()); }
	iv_ruleLambda=ruleLambda
	{ $current=$iv_ruleLambda.current; }
	EOF;

// Rule Lambda
ruleLambda returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getLambdaAccess().getLeftParenthesisKeyword_0());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getLambdaRule());
			}
			newCompositeNode(grammarAccess.getLambdaAccess().getNameAndTypeParserRuleCall_1());
		}
		this_NameAndType_1=ruleNameAndType[$current]
		{
			$current = $this_NameAndType_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getLambdaAccess().getRightParenthesisKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getLambdaAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLambdaAccess().getLogicExpParserRuleCall_4_0());
				}
				lv_logic_4_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLambdaRule());
					}
					set(
						$current,
						"logic",
						lv_logic_4_0,
						"dk.sdu.mmmi.mdsd.X21.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getLambdaAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleInput
entryRuleInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputRule()); }
	iv_ruleInput=ruleInput
	{ $current=$iv_ruleInput.current; }
	EOF;

// Rule Input
ruleInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='input'
		{
			newLeafNode(otherlv_0, grammarAccess.getInputAccess().getInputKeyword_0());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getInputRule());
			}
			newCompositeNode(grammarAccess.getInputAccess().getNameAndTypeParserRuleCall_1());
		}
		this_NameAndType_1=ruleNameAndType[$current]
		{
			$current = $this_NameAndType_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFunctionOrLambda
entryRuleFunctionOrLambda returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionOrLambdaRule()); }
	iv_ruleFunctionOrLambda=ruleFunctionOrLambda
	{ $current=$iv_ruleFunctionOrLambda.current; }
	EOF;

// Rule FunctionOrLambda
ruleFunctionOrLambda returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionOrLambdaAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getFunctionOrLambdaAccess().getFunctionReferenceAction_1_0_0(),
							$current);
					}
				)
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFunctionOrLambdaRule());
							}
						}
						otherlv_2=RULE_ID
						{
							newLeafNode(otherlv_2, grammarAccess.getFunctionOrLambdaAccess().getRefFunctionCrossReference_1_0_1_0());
						}
					)
				)
			)
			    |
			{
				newCompositeNode(grammarAccess.getFunctionOrLambdaAccess().getLambdaParserRuleCall_1_1());
			}
			this_Lambda_3=ruleLambda
			{
				$current = $this_Lambda_3.current;
				afterParserOrEnumRuleCall();
			}
		)
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getFunctionOrLambdaAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleNode
entryRuleNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeRule()); }
	iv_ruleNode=ruleNode
	{ $current=$iv_ruleNode.current; }
	EOF;

// Rule Node
ruleNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='node'
		{
			newLeafNode(otherlv_0, grammarAccess.getNodeAccess().getNodeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getNodeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNodeAccess().getBodyFunctionOrLambdaParserRuleCall_2_0());
				}
				lv_body_2_0=ruleFunctionOrLambda
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodeRule());
					}
					set(
						$current,
						"body",
						lv_body_2_0,
						"dk.sdu.mmmi.mdsd.X21.FunctionOrLambda");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStream
entryRuleStream returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStreamRule()); }
	iv_ruleStream=ruleStream
	{ $current=$iv_ruleStream.current; }
	EOF;

// Rule Stream
ruleStream returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='stream'
		{
			newLeafNode(otherlv_0, grammarAccess.getStreamAccess().getStreamKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStreamRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getStreamAccess().getStartNodesNodeOrInputCrossReference_1_0());
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getStreamAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStreamRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getStreamAccess().getStartNodesNodeOrInputCrossReference_2_1_0());
					}
				)
			)
		)*
		(
			otherlv_4='to'
			{
				newLeafNode(otherlv_4, grammarAccess.getStreamAccess().getToKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStreamAccess().getPointsElementListParserRuleCall_3_1_0());
					}
					lv_points_5_0=ruleElementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStreamRule());
						}
						add(
							$current,
							"points",
							lv_points_5_0,
							"dk.sdu.mmmi.mdsd.X21.ElementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
	)
;

// Entry rule entryRuleElementList
entryRuleElementList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementListRule()); }
	iv_ruleElementList=ruleElementList
	{ $current=$iv_ruleElementList.current; }
	EOF;

// Rule ElementList
ruleElementList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getElementListAccess().getElementsElementParserRuleCall_0_0());
				}
				lv_elements_0_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementListRule());
					}
					add(
						$current,
						"elements",
						lv_elements_0_0,
						"dk.sdu.mmmi.mdsd.X21.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getElementListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getElementListAccess().getElementsElementParserRuleCall_1_1_0());
					}
					lv_elements_2_0=ruleElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementListRule());
						}
						add(
							$current,
							"elements",
							lv_elements_2_0,
							"dk.sdu.mmmi.mdsd.X21.Element");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getElementAccess().getNodeRefAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getElementRule());
						}
					}
					otherlv_1=RULE_ID
					{
						newLeafNode(otherlv_1, grammarAccess.getElementAccess().getRefNodeCrossReference_0_1_0());
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getElementAccess().getAnonymousElementAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getElementAccess().getBodyFunctionOrLambdaParserRuleCall_1_1_0());
					}
					lv_body_3_0=ruleFunctionOrLambda
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementRule());
						}
						set(
							$current,
							"body",
							lv_body_3_0,
							"dk.sdu.mmmi.mdsd.X21.FunctionOrLambda");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getElementAccess().getOutputAction_2_0(),
						$current);
				}
			)
			otherlv_5='output'
			{
				newLeafNode(otherlv_5, grammarAccess.getElementAccess().getOutputKeyword_2_1());
			}
			(
				(
					lv_name_6_0=RULE_ID
					{
						newLeafNode(lv_name_6_0, grammarAccess.getElementAccess().getNameIDTerminalRuleCall_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getElementRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_6_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDataDecl
entryRuleDataDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataDeclRule()); }
	iv_ruleDataDecl=ruleDataDecl
	{ $current=$iv_ruleDataDecl.current; }
	EOF;

// Rule DataDecl
ruleDataDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='data'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataDeclAccess().getDataKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDataDeclAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataDeclRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDataDeclAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataDeclAccess().getVariablesDataVariableParserRuleCall_3_0());
				}
				lv_variables_3_0=ruleDataVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataDeclRule());
					}
					add(
						$current,
						"variables",
						lv_variables_3_0,
						"dk.sdu.mmmi.mdsd.X21.DataVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getDataDeclAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataDeclAccess().getVariablesDataVariableParserRuleCall_4_1_0());
					}
					lv_variables_5_0=ruleDataVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataDeclRule());
						}
						add(
							$current,
							"variables",
							lv_variables_5_0,
							"dk.sdu.mmmi.mdsd.X21.DataVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getDataDeclAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDataVariable
entryRuleDataVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataVariableRule()); }
	iv_ruleDataVariable=ruleDataVariable
	{ $current=$iv_ruleDataVariable.current; }
	EOF;

// Rule DataVariable
ruleDataVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getDataVariableAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getDataVariableAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataVariableAccess().getTypeTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataVariableRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"dk.sdu.mmmi.mdsd.X21.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTypeAccess().getIntTypeAction_0_0(),
						$current);
				}
			)
			otherlv_1='int'
			{
				newLeafNode(otherlv_1, grammarAccess.getTypeAccess().getIntKeyword_0_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTypeAccess().getStringTypeAction_1_0(),
						$current);
				}
			)
			otherlv_3='string'
			{
				newLeafNode(otherlv_3, grammarAccess.getTypeAccess().getStringKeyword_1_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTypeAccess().getCustomTypeAction_2_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getTypeAccess().getDeclarationDataDeclCrossReference_2_1_0());
					}
				)
			)
		)
	)
;

// Entry rule entryRuleLogicExp
entryRuleLogicExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicExpRule()); }
	iv_ruleLogicExp=ruleLogicExp
	{ $current=$iv_ruleLogicExp.current; }
	EOF;

// Rule LogicExp
ruleLogicExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLogicExpAccess().getExpParserRuleCall_0());
		}
		this_Exp_0=ruleExp
		{
			$current = $this_Exp_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getLogicExpAccess().getEqualsLeftAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='='
				{
					newLeafNode(otherlv_2, grammarAccess.getLogicExpAccess().getEqualsSignKeyword_1_0_1());
				}
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getLogicExpAccess().getLessThanLeftAction_1_1_0(),
							$current);
					}
				)
				otherlv_4='<'
				{
					newLeafNode(otherlv_4, grammarAccess.getLogicExpAccess().getLessThanSignKeyword_1_1_1());
				}
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getLogicExpAccess().getGreaterThanLeftAction_1_2_0(),
							$current);
					}
				)
				otherlv_6='>'
				{
					newLeafNode(otherlv_6, grammarAccess.getLogicExpAccess().getGreaterThanSignKeyword_1_2_1());
				}
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getLogicExpAccess().getLessThanOrEqualsLeftAction_1_3_0(),
							$current);
					}
				)
				otherlv_8='<='
				{
					newLeafNode(otherlv_8, grammarAccess.getLogicExpAccess().getLessThanSignEqualsSignKeyword_1_3_1());
				}
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getLogicExpAccess().getGreaterThanOrEqualsLeftAction_1_4_0(),
							$current);
					}
				)
				otherlv_10='>='
				{
					newLeafNode(otherlv_10, grammarAccess.getLogicExpAccess().getGreaterThanSignEqualsSignKeyword_1_4_1());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLogicExpAccess().getRightExpParserRuleCall_2_0());
				}
				lv_right_11_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogicExpRule());
					}
					set(
						$current,
						"right",
						lv_right_11_0,
						"dk.sdu.mmmi.mdsd.X21.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExp
entryRuleExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpRule()); }
	iv_ruleExp=ruleExp
	{ $current=$iv_ruleExp.current; }
	EOF;

// Rule Exp
ruleExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpAccess().getMulDivParserRuleCall_0());
		}
		this_MulDiv_0=ruleMulDiv
		{
			$current = $this_MulDiv_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpAccess().getPlusLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='+'
					{
						newLeafNode(otherlv_2, grammarAccess.getExpAccess().getPlusSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpAccess().getMinusLeftAction_1_0_1(),
							$current);
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpAccess().getRightMulDivParserRuleCall_1_1_0());
					}
					lv_right_4_0=ruleMulDiv
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpRule());
						}
						set(
							$current,
							"right",
							lv_right_4_0,
							"dk.sdu.mmmi.mdsd.X21.MulDiv");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMulDiv
entryRuleMulDiv returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMulDivRule()); }
	iv_ruleMulDiv=ruleMulDiv
	{ $current=$iv_ruleMulDiv.current; }
	EOF;

// Rule MulDiv
ruleMulDiv returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMulDivAccess().getPrimaryParserRuleCall_0());
		}
		this_Primary_0=rulePrimary
		{
			$current = $this_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getMulDivAccess().getMulLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='*'
					{
						newLeafNode(otherlv_2, grammarAccess.getMulDivAccess().getAsteriskKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getMulDivAccess().getDivLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='/'
					{
						newLeafNode(otherlv_4, grammarAccess.getMulDivAccess().getSolidusKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMulDivAccess().getRightPrimaryParserRuleCall_1_1_0());
					}
					lv_right_5_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMulDivRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"dk.sdu.mmmi.mdsd.X21.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getIntAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getPrimaryAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getParenthesisAction_1_0(),
						$current);
				}
			)
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getBodyExpParserRuleCall_1_2_0());
					}
					lv_body_4_0=ruleExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						set(
							$current,
							"body",
							lv_body_4_0,
							"dk.sdu.mmmi.mdsd.X21.Exp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_3());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getLetStatementParserRuleCall_2());
		}
		this_LetStatement_6=ruleLetStatement
		{
			$current = $this_LetStatement_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getDataAccessParserRuleCall_3());
		}
		this_DataAccess_7=ruleDataAccess
		{
			$current = $this_DataAccess_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getNoneParserRuleCall_4());
		}
		this_None_8=ruleNone
		{
			$current = $this_None_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getIfStatementParserRuleCall_5());
		}
		this_IfStatement_9=ruleIfStatement
		{
			$current = $this_IfStatement_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getNewStatementParserRuleCall_6());
		}
		this_NewStatement_10=ruleNewStatement
		{
			$current = $this_NewStatement_10.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLetStatement
entryRuleLetStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLetStatementRule()); }
	iv_ruleLetStatement=ruleLetStatement
	{ $current=$iv_ruleLetStatement.current; }
	EOF;

// Rule LetStatement
ruleLetStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='let'
		{
			newLeafNode(otherlv_0, grammarAccess.getLetStatementAccess().getLetKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLetStatementAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLetStatementRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getLetStatementAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLetStatementAccess().getValueExpParserRuleCall_3_0());
				}
				lv_value_3_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetStatementRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"dk.sdu.mmmi.mdsd.X21.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='in'
		{
			newLeafNode(otherlv_4, grammarAccess.getLetStatementAccess().getInKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLetStatementAccess().getBodyExpParserRuleCall_5_0());
				}
				lv_body_5_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetStatementRule());
					}
					set(
						$current,
						"body",
						lv_body_5_0,
						"dk.sdu.mmmi.mdsd.X21.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='end'
		{
			newLeafNode(otherlv_6, grammarAccess.getLetStatementAccess().getEndKeyword_6());
		}
	)
;

// Entry rule entryRuleDataAccess
entryRuleDataAccess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataAccessRule()); }
	iv_ruleDataAccess=ruleDataAccess
	{ $current=$iv_ruleDataAccess.current; }
	EOF;

// Rule DataAccess
ruleDataAccess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataAccessRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getDataAccessAccess().getRefDataRefCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getDataAccessAccess().getFullStopKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataAccessRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getDataAccessAccess().getVarRefsDataVariableCrossReference_1_1_0());
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleNone
entryRuleNone returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNoneRule()); }
	iv_ruleNone=ruleNone
	{ $current=$iv_ruleNone.current; }
	EOF;

// Rule None
ruleNone returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNoneAccess().getNoneAction_0(),
					$current);
			}
		)
		otherlv_1='none'
		{
			newLeafNode(otherlv_1, grammarAccess.getNoneAccess().getNoneKeyword_1());
		}
	)
;

// Entry rule entryRuleIfStatement
entryRuleIfStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStatementRule()); }
	iv_ruleIfStatement=ruleIfStatement
	{ $current=$iv_ruleIfStatement.current; }
	EOF;

// Rule IfStatement
ruleIfStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getConditionLogicExpParserRuleCall_1_0());
				}
				lv_condition_1_0=ruleLogicExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"condition",
						lv_condition_1_0,
						"dk.sdu.mmmi.mdsd.X21.LogicExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getIfStatementAccess().getThenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getTrueExpExpParserRuleCall_3_0());
				}
				lv_trueExp_3_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"trueExp",
						lv_trueExp_3_0,
						"dk.sdu.mmmi.mdsd.X21.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='else'
		{
			newLeafNode(otherlv_4, grammarAccess.getIfStatementAccess().getElseKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getFalseExpExpParserRuleCall_5_0());
				}
				lv_falseExp_5_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"falseExp",
						lv_falseExp_5_0,
						"dk.sdu.mmmi.mdsd.X21.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='end'
		{
			newLeafNode(otherlv_6, grammarAccess.getIfStatementAccess().getEndKeyword_6());
		}
	)
;

// Entry rule entryRuleNewStatement
entryRuleNewStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNewStatementRule()); }
	iv_ruleNewStatement=ruleNewStatement
	{ $current=$iv_ruleNewStatement.current; }
	EOF;

// Rule NewStatement
ruleNewStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='new'
		{
			newLeafNode(otherlv_0, grammarAccess.getNewStatementAccess().getNewKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNewStatementRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getNewStatementAccess().getTypeDataDeclCrossReference_1_0());
				}
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getNewStatementAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNewStatementAccess().getVariablesVarAssignmentParserRuleCall_3_0());
				}
				lv_variables_3_0=ruleVarAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNewStatementRule());
					}
					add(
						$current,
						"variables",
						lv_variables_3_0,
						"dk.sdu.mmmi.mdsd.X21.VarAssignment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getNewStatementAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNewStatementAccess().getVariablesVarAssignmentParserRuleCall_4_1_0());
					}
					lv_variables_5_0=ruleVarAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNewStatementRule());
						}
						add(
							$current,
							"variables",
							lv_variables_5_0,
							"dk.sdu.mmmi.mdsd.X21.VarAssignment");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getNewStatementAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleVarAssignment
entryRuleVarAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarAssignmentRule()); }
	iv_ruleVarAssignment=ruleVarAssignment
	{ $current=$iv_ruleVarAssignment.current; }
	EOF;

// Rule VarAssignment
ruleVarAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVarAssignmentRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getVarAssignmentAccess().getVariableDataVariableCrossReference_0_0());
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getVarAssignmentAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVarAssignmentAccess().getValueExpParserRuleCall_2_0());
				}
				lv_value_2_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarAssignmentRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"dk.sdu.mmmi.mdsd.X21.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
